/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Square from "../../api/index";
import * as core from "../../core";
import { OrderState } from "./OrderState";
import { OrderFulfillmentUpdatedUpdate } from "./OrderFulfillmentUpdatedUpdate";

export const OrderFulfillmentUpdated: core.serialization.ObjectSchema<
    serializers.OrderFulfillmentUpdated.Raw,
    Square.OrderFulfillmentUpdated
> = core.serialization.object({
    orderId: core.serialization.property("order_id", core.serialization.string().optionalNullable()),
    version: core.serialization.number().optional(),
    locationId: core.serialization.property("location_id", core.serialization.string().optionalNullable()),
    state: OrderState.optional(),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    fulfillmentUpdate: core.serialization.property(
        "fulfillment_update",
        core.serialization.list(OrderFulfillmentUpdatedUpdate).optionalNullable(),
    ),
});

export declare namespace OrderFulfillmentUpdated {
    export interface Raw {
        order_id?: (string | null) | null;
        version?: number | null;
        location_id?: (string | null) | null;
        state?: OrderState.Raw | null;
        created_at?: string | null;
        updated_at?: string | null;
        fulfillment_update?: (OrderFulfillmentUpdatedUpdate.Raw[] | null) | null;
    }
}
